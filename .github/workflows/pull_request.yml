name: PR build

on:
  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'docs/**'
      - '*.md'
      - '**/*.yml'

jobs:
  test_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - jvmTest
          - linuxX64Test

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch }}

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - uses: gradle/gradle-build-action@v2

      - name: Spotless check
        run: ./gradlew spotlessCheck

      - name: Run tests
        run: ./gradlew ${{ matrix.target }} --scan

      - name: Generate Kover reports
        run: ./gradlew koverMergedReport

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: build/reports/kover/merged-report/result.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

      - name: Bundle the build report (when failure)
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report (when failure)
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

  test_mac:
    runs-on: macos-11
    strategy:
      matrix:
        target:
          - macosX64Test
          - macosArm64Test
          - iosX64Test
          - iosSimulatorArm64Test
          - iosArm64TestKlibrary
          - iosArm32TestKlibrary
          - tvosX64Test
          - tvosArm64TestKlibrary
          - watchosArm32TestKlibrary
          - watchosArm64TestKlibrary
          - watchosX86Test
          - watchosX64Test
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch }}

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - uses: gradle/gradle-build-action@v2

      - name: Run tests
        run: ./gradlew ${{ matrix.target }} --scan

      - name: Bundle the build report (when failure)
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report (when failure)
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

  test_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - mingwX64Test

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch }}

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - uses: gradle/gradle-build-action@v2

      - name: Run tests
        run: ./gradlew ${{ matrix.target }} --scan

      - name: Bundle the build report (when failure)
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report (when failure)
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"