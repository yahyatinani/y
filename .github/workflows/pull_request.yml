name: PR build

on:
  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'docs/**'
      - '*.md'
      - '**/*.yml'

jobs:
  build:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]

    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - uses: gradle/gradle-build-action@v2

      - name: Spotless check
        run: ./gradlew spotlessCheck

      # ubuntu
      - name: Run ubuntu tests
        if: matrix.os == 'ubuntu-latest'
        run: ./gradlew check --scan

      - name: Upload coverage reports
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v2
        with:
          files: build/reports/kover/merged-report/result.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

      # windows
      - name: Run windows tests
        if: matrix.os == 'windows-latest'
        run: ./gradlew mingwX64Test --scan

      # macOS
      - name: Run macOS tests
        if: matrix.os == 'macos-latest'
        run: ./gradlew macosX64Test macosArm64TestKlibrary --scan

      - name: Run watchOS tests
        if: matrix.os == 'macos-latest'
        run: ./gradlew watchosArm32TestKlibrary watchosArm64TestKlibrary watchosSimulatorArm64TestKlibrary watchosX86Test watchosX64Test --scan

      - name: Run tvOS tests
        if: matrix.os == 'macos-latest'
        run: ./gradlew tvosArm64TestKlibrary tvosSimulatorArm64TestKlibrary tvosX64Test --scan

      - name: Run iOS tests
        if: matrix.os == 'macos-latest'
        run: ./gradlew iosArm32TestKlibrary iosArm64TestKlibrary iosSimulatorArm64TestKlibrary iosX64Test --scan

      # failure build report
      - name: Bundle the build report (when failure)
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report (when failure)
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"